@import "tailwindcss";
@import "./docs/article.style.css";

html {
  /* scroll-behavior: smooth; */
}

body {
  background: var(--color-background);
  color: var(--color-foreground);
  font-family: var(--font-next-sans), Arial, Helvetica, sans-serif;
}

@theme inline {
  /* --e: var(--a, var(--b)) */
  --color-background: #fff;
  --color-foreground: var(--color-neutral-700);
  --color-muted: var(--color-neutral-500);
  --color-border: color-mix(in oklab, var(--color-muted) 25%, var(--color-background));
  --color-focus: color-mix(in oklab, var(--color-muted) 25%, transparent);

  --color-primary: var(--color-neutral-700);
  --color-primary-hover: color-mix(in oklab, var(--color-background) 8%, var(--color-primary));

  --color-destructive: var(--color-red-600);
  --color-destructive-border: --alpha(var(--color-destructive) / 0.25);
  --color-destructive-focus: --alpha(var(--color-destructive) / 0.25);
  --color-destructive-hover: color-mix(in oklab, var(--color-background) 8%, var(--color-destructive));

  --font-sans: var(--font-next-sans);
  --font-mono: var(--font-next-mono);

  --spacing-2xs: 18rem;

  /* @keyframes kf1 {
    0% {
      transform: translateY(0);
    }
    100% {
      transform: translateY(-1px);
    }
  } */
   --spacing-customspacing: 200rem;
   --container-customcontainer: 2000rem;
   --breakpoint-mybreakpoint: 200rem;
  
} 

/* @theme  {
  --color-bg: #123;
} */

@custom-variant aria-current-page (&[aria-current="page"]);
@custom-variant svg (& svg);
@custom-variant test {
  .test{
    background-color: var(--color-border);
    @slot
  }
};
/* @custom-variant h1 (&:is(h1)); */
/* @custom-variant child (:where(&>*));

@custom-variant cvar1 {
  &:is(h1) {
    background-color: blue;
    @apply bg-blue-500;
    @variant h1{
      @slot
    }
  }
} */

@utility reset {
  all: revert;
  @apply asdf-2xl
}

@utility util1-* {
  @apply asdf-2xl;
}

@utility asdf-* {
  content: --value( --tracking-*, --blur-*, 'initial', 'hello');
  content: --modifier( --tracking-*, --spacing-*, 'initial', 'hello');
  @apply bg-muted bg-[var(--color-destructive)] bg-[var(--hello)] bg-(--color-destructive-border)/50 [background:var(--color-destructive-hover)/50];
  @apply input-base;
}

@utility input-base {
  --input-h-sm:                     calc(var(--spacing) * 8);
  --input-h:                        calc(var(--spacing) * 9);
  --input-h-lg:                     calc(var(--spacing) * 10);
  --input-h-xl:                     calc(var(--spacing) * 11);
  --input-px-sm:                    calc(var(--spacing) * 3);
  --input-px:                       calc(var(--spacing) * 3);
  --input-px-lg:                    calc(var(--spacing) * 4);
  --input-px-xl:                    calc(var(--spacing) * 4.5);
  --input-shadow-width:             4px;
  --input-shadow:                   inset 0 1px 3px -1px var(--color-border);
  --input-shadow-destructive-focus: 0 0 0 var(--input-shadow-width) var(--color-destructive-focus);
  --input-hover-outline:            --alpha(var(--color-primary)/0.25);

  @apply 
    rounded-md
    text-sm
    border border-border/50 outline-none
    transition-[outline,border,box-shadow]
    shadow-[0_0_0_0_var(--color-border),var(--input-shadow)]
    hover:border-(--input-hover-outline)
  ;
  &:disabled {
    @apply 
      bg-foreground/5 
      pointer-events-none 
      opacity-75
  }
  &:where(:focus), 
  &:where(:focus-within) {
    @apply 
      border-(--input-hover-outline) 
      shadow-[0_0_0_var(--input-shadow-width)_var(--color-focus),var(--input-shadow)]
  }
  &:where([aria-invalid="true"]), 
  &:where(:has([aria-invalid="true"])) {
    @apply 
      border-destructive/50
      hover:border-destructive/75
      shadow-[var(--input-shadow-destructive-focus),var(--input-shadow)]
  }
}
/* input-base-end */


@utility asdf2-*{
  &:before{
    content: --value('hello') --value('world');
    content: --modifier( --tracking-*, --blur-*, 'initial', 'hello');
  }
}

@utility card {
  --p: calc(var(--spacing) * 3);
  @apply p-(--p) outline outline-border/50 shadow-xs
}